#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# prompt
precmd() {
  print -P -n '\n${(r:($COLUMNS)::-:)}'
}

# PROMPT=$'left'
# RPROMPT=$'right'

# Customize to your needs...

# path
export PATH=$HOME/.nodebrew/current/bin:$PATH
export PATH=$HOME/bin:$PATH
export PATH=$HOME/.rbenv/shims:$PATH

# umask 077
umask 077

# alias list
alias ls='ls -G'
alias ll='ls -lh '
alias l.='ls -d .*'
alias ll.='ls -dlh '
alias grep='grep '
alias df='df -h'
alias du='\du -sh'
alias du.='\du -sh $(ls -d .*|grep -v ^.$|grep -v ^..$)'
alias path='echo $PATH | tr ":" "\n"'

alias yins='ssh -X t16cs022@student.yamanashi.ac.jp'
alias fskki='sshfs -o IdentityFile=/Users/t16cs022/.ssh/fskki_id_rsa t16cs022@kw02.kki.yamanashi.ac.jp:/home/t16cs022 ~/kki'
alias exkki='umount -f $HOME/kki'
alias vpn-connect='scutil --nc start "VPN (Cisco IPSec)"'
alias vpn-disconnect='scutil --nc stop "VPN (Cisco IPSec)"'
alias brpy3='source $HOME/scraping/bin/activate'
alias brendpy3='deactivate'
alias conpy3='source activate conpy3'
alias anapy3='source activate anapy3'
alias endpy='source deactivate'
alias nabepy='source $HOME/nabe/nabepy/bin/activate'
alias pydl='source $HOME/deep_learning/pydl/bin/activate'
alias cmacs='emacs -nw'
alias evil='emacs -f evil-mode'

alias go='~/shellscript/go.sh'
alias goc='~/shellscript/goc.sh'

# open
alias firefox='open -a/Applications/Firefox.app'
alias safari='open -a /Applications/Safari.app'
alias chrome='open -a /Applications/Google\ Chrome.app'
alias slack='open -a /Applications/Slack.app'
alias atom='open -a /Applications/Atom.app'
alias sublime='open -a /Applications/Sublime\ Text.app'
alias f='open .'

# function list
function cd ()
{
	builtin cd "$@" && ls
}
function ba ()
{
	builtin cd - && ls
}
function mkcd ()
{
	mkdir -p "$@" && cd "$1"
}
function mkcd2 ()
{
	mkdir -p "$@" && cd "$_"
}
function lessn ()
{
	cat -n "$1" | less
}
function mkbak ()
{
	for target in "$@"; do
		cp -ir "$target" "$target".bak$(date +"%Y%m%d");
	done
}
function vix ()
{
	vim "$1" && chmod +x "$1";
} 
function vir ()
{
	vim "$1" && chmod a+r "$1";
}
function compdf ()
{
	gs -q -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile="$@";
}
function kw02 ()
{
	ssh "$@" t16cs022@kw02.kki.yamanashi.ac.jp
}
function upkki(){
	DIR="$1"
	shift
	scp -i /Users/t16cs022/.ssh/cmd_id_rsa -r "$@" t16cs022@kw02.kki.yamanashi.ac.jp:"$DIR"
}
function downkki(){
	scp -i /Users/t16cs022/.ssh/cmd_id_rsa -r t16cs022@kw02.kki.yamanashi.ac.jp:"$@"
}
function printkki(){ # ps4両面印刷(長編折返)
	filename="$1";
	scp -i /Users/t16cs022/.ssh/cmd_id_rsa $filename t16cs022@kw02.kki.yamanashi.ac.jp:/tmp/
	ssh -i /Users/t16cs022/.ssh/cmd_id_rsa t16cs022@kw02.kki.yamanashi.ac.jp lp -o sides=two-sided-long-edge /tmp/$filename  
	ssh -i /Users/t16cs022/.ssh/cmd_id_rsa t16cs022@kw02.kki.yamanashi.ac.jp rm -f /tmp/$filename
}
function printkki2(){ # ps3片面印刷
	filename="$1";
	scp -i /Users/t16cs022/.ssh/cmd_id_rsa $filename t16cs022@kw02.kki.yamanashi.ac.jp:/tmp/
	ssh -i /Users/t16cs022/.ssh/cmd_id_rsa t16cs022@kw02.kki.yamanashi.ac.jp lp -d ps3 -o sides=one-sided /tmp/$filename  
	ssh -i /Users/t16cs022/.ssh/cmd_id_rsa t16cs022@kw02.kki.yamanashi.ac.jp rm -f /tmp/$filename
}
function whojw (){
	ssh  -i /Users/t16cs022/.ssh/cmd_id_rsa t16cs022@kw02.kki.yamanashi.ac.jp /home/t16cs022/bin/whojw
}
function dic (){
	w3m "http://ejje.weblio.jp/content/$1"
}
function cdf (){
	target=$(osascript -e 'tell application "Finder" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)')
	if [ "$target" != "" ]; then
		builtin cd "$target"; pwd; echo; ls
	else
		echo 'No Finder window found'
	fi
}
function chf(){
	if [ $(defaults read com.apple.finder AppleShowAllFiles) = "FALSE" ]; then
		defaults write com.apple.finder AppleShowAllFiles TRUE
	else
		defaults write com.apple.finder AppleShowAllFiles FALSE
	fi
	killall Finder
}
function edit(){
	if [ ! -f "$1" ]; then touch "$1"; fi
	open -a TextEdit "$1"
}
function make_tex_pdf(){
    # $1 = input.md, $2 = output.md
    docker run -it --rm -v `pwd`:/workspace kumassy/alpine-pandoc-ja pandoc $1 -f markdown -o $2 --pdf-engine=lualatex
}

# 履歴
# 履歴ファイルの保存先
export HISTFILE=${HOME}/.zsh_history

# メモリに保存される履歴の件数
export HISTSIZE=1000

# 履歴ファイルに保存される履歴の件数
export SAVEHIST=100000

# 重複を記録しない
setopt hist_ignore_dups

# 他端末と履歴を共有
setopt share_history

# 開始と終了を記録
setopt EXTENDED_HISTORY

unction peco-history-selection() {
    BUFFER=`history -n 1 | tail -r  | awk '!a[$0]++' | peco`
    CURSOR=$#BUFFER
    zle reset-prompt
}

zle -N peco-history-selection
bindkey '^R' peco-history-selection

echo "read .zshrc"
